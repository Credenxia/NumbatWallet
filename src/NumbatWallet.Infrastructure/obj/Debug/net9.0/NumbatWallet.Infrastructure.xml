<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NumbatWallet.Infrastructure</name>
    </assembly>
    <members>
        <member name="T:NumbatWallet.Infrastructure.Crypto.CryptoService">
            <summary>
            Provides envelope encryption services for multi-tenant data protection
            </summary>
        </member>
        <member name="T:NumbatWallet.Infrastructure.Crypto.Interfaces.ICryptoService">
            <summary>
            Provides encryption and decryption services using envelope encryption
            </summary>
        </member>
        <member name="M:NumbatWallet.Infrastructure.Crypto.Interfaces.ICryptoService.EncryptAsync(System.String,NumbatWallet.SharedKernel.Enums.DataClassification)">
            <summary>
            Encrypts plaintext using envelope encryption based on data classification
            </summary>
        </member>
        <member name="M:NumbatWallet.Infrastructure.Crypto.Interfaces.ICryptoService.DecryptAsync(System.String,NumbatWallet.SharedKernel.Enums.DataClassification)">
            <summary>
            Decrypts ciphertext using envelope encryption
            </summary>
        </member>
        <member name="M:NumbatWallet.Infrastructure.Crypto.Interfaces.ICryptoService.EncryptBytesAsync(System.Byte[],NumbatWallet.SharedKernel.Enums.DataClassification)">
            <summary>
            Encrypts binary data using envelope encryption
            </summary>
        </member>
        <member name="M:NumbatWallet.Infrastructure.Crypto.Interfaces.ICryptoService.DecryptBytesAsync(System.Byte[],NumbatWallet.SharedKernel.Enums.DataClassification)">
            <summary>
            Decrypts binary data using envelope encryption
            </summary>
        </member>
        <member name="M:NumbatWallet.Infrastructure.Crypto.Interfaces.ICryptoService.RotateDekAsync(System.String)">
            <summary>
            Rotates the Data Encryption Key for a tenant
            </summary>
        </member>
        <member name="M:NumbatWallet.Infrastructure.Crypto.Interfaces.ICryptoService.GetCurrentDekVersionAsync(System.String)">
            <summary>
            Gets the current DEK version for a tenant
            </summary>
        </member>
        <member name="T:NumbatWallet.Infrastructure.Crypto.Interfaces.IKeyWrapProvider">
            <summary>
            Provides key wrapping and unwrapping functionality for envelope encryption
            </summary>
        </member>
        <member name="M:NumbatWallet.Infrastructure.Crypto.Interfaces.IKeyWrapProvider.WrapAsync(System.Byte[],System.String,System.String)">
            <summary>
            Wraps a Data Encryption Key using a Key Encryption Key
            </summary>
        </member>
        <member name="M:NumbatWallet.Infrastructure.Crypto.Interfaces.IKeyWrapProvider.UnwrapAsync(System.Byte[],System.String,System.String)">
            <summary>
            Unwraps a Data Encryption Key using a Key Encryption Key
            </summary>
        </member>
        <member name="M:NumbatWallet.Infrastructure.Crypto.Interfaces.IKeyWrapProvider.CreateKekAsync(System.String,NumbatWallet.Infrastructure.Crypto.Interfaces.KekProperties)">
            <summary>
            Creates a new Key Encryption Key for a tenant
            </summary>
        </member>
        <member name="M:NumbatWallet.Infrastructure.Crypto.Interfaces.IKeyWrapProvider.RotateKekAsync(System.String,System.String,System.String)">
            <summary>
            Rotates a Key Encryption Key
            </summary>
        </member>
        <member name="T:NumbatWallet.Infrastructure.Crypto.Interfaces.KekProperties">
            <summary>
            Properties for creating a Key Encryption Key
            </summary>
        </member>
        <member name="T:NumbatWallet.Infrastructure.Crypto.KeyVaultWrapProvider">
            <summary>
            Azure Key Vault implementation of key wrapping provider for envelope encryption
            </summary>
        </member>
        <member name="T:NumbatWallet.Infrastructure.Data.Converters.ProtectedFieldConverter">
            <summary>
            Value converter for storing protected fields as JSONB in PostgreSQL
            </summary>
        </member>
        <member name="T:NumbatWallet.Infrastructure.Data.Converters.ProtectedFieldData">
            <summary>
            Internal structure for JSONB storage
            </summary>
        </member>
        <member name="T:NumbatWallet.Infrastructure.Data.DesignTimeDbContextFactory">
            <summary>
            Factory for creating DbContext at design time for EF Core tools
            </summary>
        </member>
        <member name="T:NumbatWallet.Infrastructure.Data.Interceptors.AuditInterceptor">
            <summary>
            Interceptor that logs access to protected fields based on data classification
            </summary>
        </member>
        <member name="T:NumbatWallet.Infrastructure.Data.Interceptors.ProtectionInterceptor">
            <summary>
            Interceptor that applies protection (encryption/tokenization) based on tenant policies
            </summary>
        </member>
        <member name="T:NumbatWallet.Infrastructure.Data.Migrations.InitialSchema">
            <inheritdoc />
        </member>
        <member name="M:NumbatWallet.Infrastructure.Data.Migrations.InitialSchema.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:NumbatWallet.Infrastructure.Data.Migrations.InitialSchema.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:NumbatWallet.Infrastructure.Data.Migrations.InitialSchema.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
