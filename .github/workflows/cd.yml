name: CD - Build and Deploy

on:
  workflow_run:
    workflows: ["CI - Build and Test"]
    types:
      - completed
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        type: choice
        options:
          - dev
          - test
          - prod

env:
  DOTNET_VERSION: '9.0.x'
  DOCKER_BUILDKIT: 1
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: read
      packages: write
    outputs:
      api-image: ${{ steps.meta-api.outputs.tags }}
      admin-image: ${{ steps.meta-admin.outputs.tags }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Generate version
        id: version
        run: |
          VERSION="${GITHUB_SHA::8}-$(date +%Y%m%d%H%M%S)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Extract metadata for API
        id: meta-api
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api
            ${{ secrets.ACR_LOGIN_SERVER }}/numbatwallet-api
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=${{ steps.version.outputs.version }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push API Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/NumbatWallet.Web.Api/Dockerfile
          push: true
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            DOTNET_VERSION=${{ env.DOTNET_VERSION }}
            BUILD_CONFIGURATION=Release

      - name: Extract metadata for Admin
        id: meta-admin
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-admin
            ${{ secrets.ACR_LOGIN_SERVER }}/numbatwallet-admin
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=${{ steps.version.outputs.version }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push Admin Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/NumbatWallet.Web.Admin/Dockerfile
          push: true
          tags: ${{ steps.meta-admin.outputs.tags }}
          labels: ${{ steps.meta-admin.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            DOTNET_VERSION=${{ env.DOTNET_VERSION }}
            BUILD_CONFIGURATION=Release

      - name: Run Trivy vulnerability scanner on API
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.ACR_LOGIN_SERVER }}/numbatwallet-api:${{ steps.version.outputs.version }}
          format: 'sarif'
          output: 'trivy-api-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Run Trivy vulnerability scanner on Admin
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.ACR_LOGIN_SERVER }}/numbatwallet-admin:${{ steps.version.outputs.version }}
          format: 'sarif'
          output: 'trivy-admin-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: |
            trivy-api-results.sarif
            trivy-admin-results.sarif

  deploy-dev:
    name: Deploy to Development
    needs: build-images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    environment:
      name: dev
      url: https://numbatwallet-api-dev.azurecontainerapps.io
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy API to Container Apps
        run: |
          az containerapp update \
            --name ca-api-numbatwallet-dev-aue \
            --resource-group rg-numbatwallet-dev-aue \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/numbatwallet-api:${{ needs.build-images.outputs.version }} \
            --set-env-vars \
              ASPNETCORE_ENVIRONMENT=Development \
              ApplicationInsights__ConnectionString="${{ secrets.APPINSIGHTS_CONNECTION_STRING_DEV }}" \
              Database__ConnectionString="${{ secrets.DATABASE_CONNECTION_STRING_DEV }}" \
              ServiceBus__ConnectionString="${{ secrets.SERVICEBUS_CONNECTION_STRING_DEV }}" \
              KeyVault__Uri="${{ secrets.KEYVAULT_URI_DEV }}" \
            --min-replicas 1 \
            --max-replicas 3 \
            --scale-rule-name cpu-scaling \
            --scale-rule-type cpu \
            --scale-rule-metadata type=utilization value=70

      - name: Deploy Admin to Container Apps
        run: |
          az containerapp update \
            --name ca-admin-numbatwallet-dev-aue \
            --resource-group rg-numbatwallet-dev-aue \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/numbatwallet-admin:${{ needs.build-images.outputs.version }} \
            --set-env-vars \
              ASPNETCORE_ENVIRONMENT=Development \
              ApplicationInsights__ConnectionString="${{ secrets.APPINSIGHTS_CONNECTION_STRING_DEV }}" \
              Api__BaseUrl="https://numbatwallet-api-dev.azurecontainerapps.io" \
              KeyVault__Uri="${{ secrets.KEYVAULT_URI_DEV }}" \
            --min-replicas 1 \
            --max-replicas 2

      - name: Run smoke tests
        run: |
          # Wait for deployment to stabilize
          sleep 30

          # Health check
          curl -f https://numbatwallet-api-dev.azurecontainerapps.io/health || exit 1

          # API version check
          curl -f https://numbatwallet-api-dev.azurecontainerapps.io/api/version || exit 1

  deploy-test:
    name: Deploy to Test
    needs: build-images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'test')
    environment:
      name: test
      url: https://numbatwallet-api-test.azurecontainerapps.io
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy API to Container Apps
        run: |
          az containerapp update \
            --name ca-api-numbatwallet-test-aue \
            --resource-group rg-numbatwallet-test-aue \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/numbatwallet-api:${{ needs.build-images.outputs.version }} \
            --set-env-vars \
              ASPNETCORE_ENVIRONMENT=Staging \
              ApplicationInsights__ConnectionString="${{ secrets.APPINSIGHTS_CONNECTION_STRING_TEST }}" \
              Database__ConnectionString="${{ secrets.DATABASE_CONNECTION_STRING_TEST }}" \
              ServiceBus__ConnectionString="${{ secrets.SERVICEBUS_CONNECTION_STRING_TEST }}" \
              KeyVault__Uri="${{ secrets.KEYVAULT_URI_TEST }}" \
            --min-replicas 2 \
            --max-replicas 5 \
            --scale-rule-name cpu-scaling \
            --scale-rule-type cpu \
            --scale-rule-metadata type=utilization value=60

      - name: Deploy Admin to Container Apps
        run: |
          az containerapp update \
            --name ca-admin-numbatwallet-test-aue \
            --resource-group rg-numbatwallet-test-aue \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/numbatwallet-admin:${{ needs.build-images.outputs.version }} \
            --set-env-vars \
              ASPNETCORE_ENVIRONMENT=Staging \
              ApplicationInsights__ConnectionString="${{ secrets.APPINSIGHTS_CONNECTION_STRING_TEST }}" \
              Api__BaseUrl="https://numbatwallet-api-test.azurecontainerapps.io" \
              KeyVault__Uri="${{ secrets.KEYVAULT_URI_TEST }}" \
            --min-replicas 1 \
            --max-replicas 3

      - name: Run integration tests
        run: |
          # Run integration test suite
          dotnet test src/Tests/NumbatWallet.IntegrationTests \
            --configuration Release \
            --environment TestUrl=https://numbatwallet-api-test.azurecontainerapps.io

  deploy-prod:
    name: Deploy to Production
    needs: [build-images, deploy-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'
    environment:
      name: prod
      url: https://api.numbatwallet.wa.gov.au
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Blue-Green Deployment - API
        run: |
          # Deploy to staging slot
          az containerapp revision copy \
            --name ca-api-numbatwallet-prod-aue \
            --resource-group rg-numbatwallet-prod-aue \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/numbatwallet-api:${{ needs.build-images.outputs.version }} \
            --revision-suffix staging-${{ github.run_number }}

          # Run health checks on staging
          STAGING_URL=$(az containerapp revision show \
            --name ca-api-numbatwallet-prod-aue \
            --resource-group rg-numbatwallet-prod-aue \
            --revision staging-${{ github.run_number }} \
            --query properties.fqdn -o tsv)

          curl -f https://$STAGING_URL/health || exit 1

          # Gradually shift traffic
          az containerapp ingress traffic set \
            --name ca-api-numbatwallet-prod-aue \
            --resource-group rg-numbatwallet-prod-aue \
            --revision-weights staging-${{ github.run_number }}=10

          sleep 60

          # Full traffic shift if healthy
          az containerapp ingress traffic set \
            --name ca-api-numbatwallet-prod-aue \
            --resource-group rg-numbatwallet-prod-aue \
            --revision-weights staging-${{ github.run_number }}=100

      - name: Blue-Green Deployment - Admin
        run: |
          # Similar blue-green deployment for Admin portal
          az containerapp revision copy \
            --name ca-admin-numbatwallet-prod-aue \
            --resource-group rg-numbatwallet-prod-aue \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/numbatwallet-admin:${{ needs.build-images.outputs.version }} \
            --revision-suffix staging-${{ github.run_number }}

          # Traffic shift
          az containerapp ingress traffic set \
            --name ca-admin-numbatwallet-prod-aue \
            --resource-group rg-numbatwallet-prod-aue \
            --revision-weights staging-${{ github.run_number }}=100

      - name: Create release tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.build-images.outputs.version }}
          release_name: Release v${{ needs.build-images.outputs.version }}
          body: |
            Production deployment of NumbatWallet

            ## Changes
            - API Image: ${{ needs.build-images.outputs.api-image }}
            - Admin Image: ${{ needs.build-images.outputs.admin-image }}

            ## Deployment Details
            - Environment: Production
            - Region: Australia East
            - Deployed by: ${{ github.actor }}
            - Deployment time: ${{ github.event.head_commit.timestamp }}
          draft: false
          prerelease: false