name: Infrastructure Deployment

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'infrastructure/bicep/**'
      - '.github/workflows/infrastructure.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'infrastructure/bicep/**'
      - '.github/workflows/infrastructure.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        type: choice
        options:
          - dev
          - test
          - prod
      deploymentType:
        description: 'Deployment type'
        required: true
        type: choice
        options:
          - validate
          - deploy
          - destroy

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}

jobs:
  validate:
    name: Validate Bicep Templates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: azure/setup-cli@v1
        with:
          version: 'latest'

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Validate main.bicep
        run: |
          az deployment sub validate \
            --location australiaeast \
            --template-file infrastructure/bicep/main.bicep \
            --parameters infrastructure/bicep/environments/dev.bicepparam \
            --name validate-${{ github.run_number }}

      - name: Lint Bicep files
        run: |
          az bicep lint --file infrastructure/bicep/main.bicep
          for file in infrastructure/bicep/modules/*.bicep; do
            echo "Linting $file"
            az bicep lint --file "$file"
          done

      - name: Build Bicep files
        run: |
          az bicep build --file infrastructure/bicep/main.bicep --outdir ./artifacts
          for file in infrastructure/bicep/modules/*.bicep; do
            az bicep build --file "$file" --outdir ./artifacts/modules
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bicep-templates
          path: ./artifacts

  what-if-dev:
    name: What-If Analysis (Dev)
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && github.event.inputs.deploymentType == 'validate')
    environment:
      name: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: What-If deployment
        run: |
          az deployment sub what-if \
            --location australiaeast \
            --template-file infrastructure/bicep/main.bicep \
            --parameters infrastructure/bicep/environments/dev.bicepparam \
            --parameters postgresAdminPassword='${{ secrets.POSTGRES_ADMIN_PASSWORD_DEV }}' \
            --parameters administratorObjectId='${{ secrets.AZURE_ADMIN_OBJECT_ID }}' \
            --name whatif-dev-${{ github.run_number }}

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: validate
    if: (github.ref == 'refs/heads/develop' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev' && github.event.inputs.deploymentType == 'deploy')
    environment:
      name: dev
      url: https://app-api-numbatwallet-dev-aue.azurewebsites.net
    outputs:
      resourceGroupName: ${{ steps.deploy.outputs.resourceGroupName }}
      webApiUrl: ${{ steps.deploy.outputs.webApiUrl }}
      webAdminUrl: ${{ steps.deploy.outputs.webAdminUrl }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy infrastructure
        id: deploy
        run: |
          outputs=$(az deployment sub create \
            --location australiaeast \
            --template-file infrastructure/bicep/main.bicep \
            --parameters infrastructure/bicep/environments/dev.bicepparam \
            --parameters postgresAdminPassword='${{ secrets.POSTGRES_ADMIN_PASSWORD_DEV }}' \
            --parameters administratorObjectId='${{ secrets.AZURE_ADMIN_OBJECT_ID }}' \
            --parameters jwtSigningKey='${{ secrets.JWT_SIGNING_KEY_DEV }}' \
            --name deploy-dev-${{ github.run_number }} \
            --query properties.outputs \
            --output json)

          echo "resourceGroupName=$(echo $outputs | jq -r .resourceGroupName.value)" >> $GITHUB_OUTPUT
          echo "webApiUrl=$(echo $outputs | jq -r .webApiUrl.value)" >> $GITHUB_OUTPUT
          echo "webAdminUrl=$(echo $outputs | jq -r .webAdminUrl.value)" >> $GITHUB_OUTPUT

      - name: Tag deployment
        run: |
          az tag create --resource-id "/subscriptions/${{ env.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ steps.deploy.outputs.resourceGroupName }}" \
            --tags DeployedBy="${{ github.actor }}" \
                   DeploymentRun="${{ github.run_number }}" \
                   DeploymentDate="$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
                   GitCommit="${{ github.sha }}"

  deploy-test:
    name: Deploy to Test
    runs-on: ubuntu-latest
    needs: validate
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'test' && github.event.inputs.deploymentType == 'deploy')
    environment:
      name: test
      url: https://app-api-numbatwallet-test-aue.azurewebsites.net
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy infrastructure
        run: |
          az deployment sub create \
            --location australiaeast \
            --template-file infrastructure/bicep/main.bicep \
            --parameters infrastructure/bicep/environments/test.bicepparam \
            --parameters postgresAdminPassword='${{ secrets.POSTGRES_ADMIN_PASSWORD_TEST }}' \
            --parameters administratorObjectId='${{ secrets.AZURE_ADMIN_OBJECT_ID }}' \
            --parameters managedIdentityObjectId='${{ secrets.MANAGED_IDENTITY_OBJECT_ID_TEST }}' \
            --parameters jwtSigningKey='${{ secrets.JWT_SIGNING_KEY_TEST }}' \
            --name deploy-test-${{ github.run_number }}

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [validate, deploy-test]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod' && github.event.inputs.deploymentType == 'deploy'
    environment:
      name: prod
      url: https://app-api-numbatwallet-prod-aue.azurewebsites.net
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Pre-deployment backup
        run: |
          # Backup existing configuration
          az postgres flexible-server db show \
            --resource-group rg-numbatwallet-prod-aue \
            --server-name psql-numbatwallet-prod-aue \
            --database-name numbatwallet || echo "No existing database to backup"

      - name: Deploy infrastructure
        run: |
          az deployment sub create \
            --location australiaeast \
            --template-file infrastructure/bicep/main.bicep \
            --parameters infrastructure/bicep/environments/prod.bicepparam \
            --parameters postgresAdminPassword='${{ secrets.POSTGRES_ADMIN_PASSWORD_PROD }}' \
            --parameters administratorObjectId='${{ secrets.AZURE_ADMIN_OBJECT_ID }}' \
            --parameters managedIdentityObjectId='${{ secrets.MANAGED_IDENTITY_OBJECT_ID_PROD }}' \
            --parameters jwtSigningKey='${{ secrets.JWT_SIGNING_KEY_PROD }}' \
            --parameters existingVnetResourceGroup='${{ secrets.PROD_VNET_RESOURCE_GROUP }}' \
            --parameters existingVnetName='${{ secrets.PROD_VNET_NAME }}' \
            --parameters privateEndpointSubnetId='${{ secrets.PROD_PRIVATE_ENDPOINT_SUBNET_ID }}' \
            --name deploy-prod-${{ github.run_number }}

      - name: Post-deployment verification
        run: |
          # Verify critical resources are running
          az postgres flexible-server show \
            --resource-group rg-numbatwallet-prod-aue \
            --server-name psql-numbatwallet-prod-aue \
            --query state \
            --output tsv

  destroy-environment:
    name: Destroy Environment
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploymentType == 'destroy'
    environment:
      name: ${{ github.event.inputs.environment }}
    steps:
      - name: Confirm destruction
        run: |
          echo "⚠️ WARNING: About to destroy ${{ github.event.inputs.environment }} environment"
          echo "This action cannot be undone!"

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Delete resource group
        if: github.event.inputs.environment != 'prod' # Extra safety for production
        run: |
          az group delete \
            --name rg-numbatwallet-${{ github.event.inputs.environment }}-aue \
            --yes \
            --no-wait